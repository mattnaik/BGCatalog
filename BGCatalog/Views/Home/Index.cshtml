@using NonFactors.Mvc.Grid;
@using BGCatalog.Web.Extensions;
@model BGCatalog.Web.Models.MainPageViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div>
    @{
        string messageClass = string.Empty;

        if (!string.IsNullOrWhiteSpace(Model.Message))
        {
            if (Model.Message.Contains("Success"))
            {
                messageClass = "alert-success";
            }
            else
            {
                messageClass = "alert-danger";
            }
            <div class="alert @messageClass alert-dismissable">
                <a href="#" class="close" data-dismiss="alert" aria-label="close" id="alertClose">&times;</a>
                @Html.DisplayFor(m => m.Message)
            </div>
        }
    }
   
    <form asp-action="AddGame" asp-controller="Home">
        <div class="form-group">
            <label for="BGSearch">Add game to collection</label>
            <div class="input-group">
                <input type="text" class="form-control typeahead" id="BGSearch" data-provide="typeahead" autocomplete="off" />
                <div class="input-group-btn">
                    <button type="submit" class="btn btn-default">Add Game</button>
                </div>
            </div>
            <input type="hidden" id="SelectedGameId" name="SelectedGameId" />
        </div>
    </form>
    <table class="table table-hover">
        <thead>
            <tr>
                <th></th>
                <th>Name</th>
                <th>Min Players</th>
                <th>Max Players</th>
                <th>Date Added</th>
                <th>Plays</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var game in Model.UserBoardgameCollection)
            {
                <tr>
                    <td>@Html.Raw(Html.ByteArrayToImgTag(game.CoverImage))</td>
                    <td>@game.BoardgameName</td>
                    <td>@game.MinPlayers</td>
                    <td>@game.MaxPlayers</td>
                    <td>@game.DateAdded.Value.ToShortDateString()</td>
                    <td><a asp-action="GamePlayModal" asp-controller="Home" asp-route-gameid="@game.BoardgameId" class="btn-game-plays">@game.PlayCount</a></td>
                    <td><a asp-action="DeleteGameFromCollection" asp-controller="Home" asp-route-gameid="@game.BoardgameId" class="glyphicon glyphicon-trash" aria-hidden="true"></a></td>
                </tr>
            }
        </tbody>
    </table>
    <div class="modal fade" id="gamePlayModal" tabindex="-1" role="dialog" data-backdrop="static">
        <div class="modal-dialog" role="document">
            <div class="modal-content" id="gamePlayContent">
             </div>
        </div>
    </div>
    <div class="data" id="data"></div>
    </div>
    @section Scripts
        {

        <script>
            
            $('body').on('click', '.btn-game-plays', function (e) {
                e.preventDefault();
                $(this).attr('data-target', '#gamePlayModal');
                $(this).attr('data-toggle', 'modal');

                

            });
            $('#gamePlayModal').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
                $('#gamePlayContent').html('');
            });

            var map = {};
            $('#BGSearch').typeahead({
                minLength: 3,
                source: function (query, process) {
                    objects = [];

                    $.ajax({
                        type: 'GET',
                        cache: false,
                        url: 'Home/SearchBGG',
                        data: { search: query },
                        success: function (result) {
                            var str = JSON.stringify(result);
                            //$("#data").html(str);
                            $.each(result.boardgames.boardgame, function (index, value) {
                                var bgName = "";
                                if ($.isPlainObject(value.name)) {
                                    bgName = value.name['#text'] + " (" + value.yearpublished + ")";
                                }
                                else {
                                    bgName = value.name + " (" + value.yearpublished + ")";
                                }
                                map[bgName] = value['@@objectid'];
                                objects.push(bgName);
                            });
                            process(objects);
                        },
                        error: function (result) {
                            //alert('error');
                        }
                    });
                },
                updater: function (item) {
                    //alert(item);
                    $('#SelectedGameId').val(map[item]);
                    return item;
                }
            });

                          
    



        </script>
    }
